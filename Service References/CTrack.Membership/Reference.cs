//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FTL.CTrack.Membership {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseModel", Namespace="http://schemas.datacontract.org/2004/07/DCT.CtrackExternalAPI.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FTL.CTrack.Membership.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FTL.CTrack.Membership.ValidToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FTL.CTrack.Membership.BusinessGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FTL.CTrack.Membership.ProductFeatures))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FTL.CTrack.Membership.UserSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FTL.CTrack.Membership.CostCentre))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FTL.CTrack.Membership.Validation))]
    public partial class BaseModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DCT.CtrackExternalAPI.Model")]
    [System.SerializableAttribute()]
    public partial class User : FTL.CTrack.Membership.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> DomainUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockoutEndTime1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LoggedInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LoginTryCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PrivacyFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PwdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TimezoneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> lockoutendtimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> DomainUser {
            get {
                return this.DomainUserField;
            }
            set {
                if ((this.DomainUserField.Equals(value) != true)) {
                    this.DomainUserField = value;
                    this.RaisePropertyChanged("DomainUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockoutEndTime1 {
            get {
                return this.LockoutEndTime1Field;
            }
            set {
                if ((this.LockoutEndTime1Field.Equals(value) != true)) {
                    this.LockoutEndTime1Field = value;
                    this.RaisePropertyChanged("LockoutEndTime1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LoggedIn {
            get {
                return this.LoggedInField;
            }
            set {
                if ((this.LoggedInField.Equals(value) != true)) {
                    this.LoggedInField = value;
                    this.RaisePropertyChanged("LoggedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LoginTryCount {
            get {
                return this.LoginTryCountField;
            }
            set {
                if ((this.LoginTryCountField.Equals(value) != true)) {
                    this.LoginTryCountField = value;
                    this.RaisePropertyChanged("LoginTryCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineName {
            get {
                return this.MachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineNameField, value) != true)) {
                    this.MachineNameField = value;
                    this.RaisePropertyChanged("MachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeId {
            get {
                return this.NodeIdField;
            }
            set {
                if ((this.NodeIdField.Equals(value) != true)) {
                    this.NodeIdField = value;
                    this.RaisePropertyChanged("NodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PrivacyFlags {
            get {
                return this.PrivacyFlagsField;
            }
            set {
                if ((this.PrivacyFlagsField.Equals(value) != true)) {
                    this.PrivacyFlagsField = value;
                    this.RaisePropertyChanged("PrivacyFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pwd {
            get {
                return this.PwdField;
            }
            set {
                if ((object.ReferenceEquals(this.PwdField, value) != true)) {
                    this.PwdField = value;
                    this.RaisePropertyChanged("Pwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TimezoneID {
            get {
                return this.TimezoneIDField;
            }
            set {
                if ((this.TimezoneIDField.Equals(value) != true)) {
                    this.TimezoneIDField = value;
                    this.RaisePropertyChanged("TimezoneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> lockoutendtime {
            get {
                return this.lockoutendtimeField;
            }
            set {
                if ((this.lockoutendtimeField.Equals(value) != true)) {
                    this.lockoutendtimeField = value;
                    this.RaisePropertyChanged("lockoutendtime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidToken", Namespace="http://schemas.datacontract.org/2004/07/DCT.CtrackExternalAPI.Model")]
    [System.SerializableAttribute()]
    public partial class ValidToken : FTL.CTrack.Membership.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool validtokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool validtoken {
            get {
                return this.validtokenField;
            }
            set {
                if ((this.validtokenField.Equals(value) != true)) {
                    this.validtokenField = value;
                    this.RaisePropertyChanged("validtoken");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessGroup", Namespace="http://schemas.datacontract.org/2004/07/DCT.CtrackExternalAPI.Model")]
    [System.SerializableAttribute()]
    public partial class BusinessGroup : FTL.CTrack.Membership.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> nodegroupidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nodegroupnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nodegroupdescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sorkkeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MarkedField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int BgId {
            get {
                return this.BgIdField;
            }
            set {
                if ((this.BgIdField.Equals(value) != true)) {
                    this.BgIdField = value;
                    this.RaisePropertyChanged("BgId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int NodeLevel {
            get {
                return this.NodeLevelField;
            }
            set {
                if ((this.NodeLevelField.Equals(value) != true)) {
                    this.NodeLevelField = value;
                    this.RaisePropertyChanged("NodeLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string BusinessDescription {
            get {
                return this.BusinessDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessDescriptionField, value) != true)) {
                    this.BusinessDescriptionField = value;
                    this.RaisePropertyChanged("BusinessDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string BusinessName {
            get {
                return this.BusinessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessNameField, value) != true)) {
                    this.BusinessNameField = value;
                    this.RaisePropertyChanged("BusinessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Nullable<int> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Nullable<int> nodegroupid {
            get {
                return this.nodegroupidField;
            }
            set {
                if ((this.nodegroupidField.Equals(value) != true)) {
                    this.nodegroupidField = value;
                    this.RaisePropertyChanged("nodegroupid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string nodegroupname {
            get {
                return this.nodegroupnameField;
            }
            set {
                if ((object.ReferenceEquals(this.nodegroupnameField, value) != true)) {
                    this.nodegroupnameField = value;
                    this.RaisePropertyChanged("nodegroupname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string nodegroupdesc {
            get {
                return this.nodegroupdescField;
            }
            set {
                if ((object.ReferenceEquals(this.nodegroupdescField, value) != true)) {
                    this.nodegroupdescField = value;
                    this.RaisePropertyChanged("nodegroupdesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string sorkkey {
            get {
                return this.sorkkeyField;
            }
            set {
                if ((object.ReferenceEquals(this.sorkkeyField, value) != true)) {
                    this.sorkkeyField = value;
                    this.RaisePropertyChanged("sorkkey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public System.Nullable<int> Marked {
            get {
                return this.MarkedField;
            }
            set {
                if ((this.MarkedField.Equals(value) != true)) {
                    this.MarkedField = value;
                    this.RaisePropertyChanged("Marked");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductFeatures", Namespace="http://schemas.datacontract.org/2004/07/DCT.CtrackExternalAPI.Model")]
    [System.SerializableAttribute()]
    public partial class ProductFeatures : FTL.CTrack.Membership.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessCIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccessEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccessStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeatureDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeatureIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserBusinessGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLRoleField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int AccessCId {
            get {
                return this.AccessCIdField;
            }
            set {
                if ((this.AccessCIdField.Equals(value) != true)) {
                    this.AccessCIdField = value;
                    this.RaisePropertyChanged("AccessCId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime AccessEndDate {
            get {
                return this.AccessEndDateField;
            }
            set {
                if ((this.AccessEndDateField.Equals(value) != true)) {
                    this.AccessEndDateField = value;
                    this.RaisePropertyChanged("AccessEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime AccessStartDate {
            get {
                return this.AccessStartDateField;
            }
            set {
                if ((this.AccessStartDateField.Equals(value) != true)) {
                    this.AccessStartDateField = value;
                    this.RaisePropertyChanged("AccessStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int BusinessGroupID {
            get {
                return this.BusinessGroupIDField;
            }
            set {
                if ((this.BusinessGroupIDField.Equals(value) != true)) {
                    this.BusinessGroupIDField = value;
                    this.RaisePropertyChanged("BusinessGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FeatureDescription {
            get {
                return this.FeatureDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureDescriptionField, value) != true)) {
                    this.FeatureDescriptionField = value;
                    this.RaisePropertyChanged("FeatureDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int FeatureID {
            get {
                return this.FeatureIDField;
            }
            set {
                if ((this.FeatureIDField.Equals(value) != true)) {
                    this.FeatureIDField = value;
                    this.RaisePropertyChanged("FeatureID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Permission {
            get {
                return this.PermissionField;
            }
            set {
                if ((this.PermissionField.Equals(value) != true)) {
                    this.PermissionField = value;
                    this.RaisePropertyChanged("Permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ProductDescription {
            get {
                return this.ProductDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDescriptionField, value) != true)) {
                    this.ProductDescriptionField = value;
                    this.RaisePropertyChanged("ProductDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool UserBusinessGroup {
            get {
                return this.UserBusinessGroupField;
            }
            set {
                if ((this.UserBusinessGroupField.Equals(value) != true)) {
                    this.UserBusinessGroupField = value;
                    this.RaisePropertyChanged("UserBusinessGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string XMLRole {
            get {
                return this.XMLRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLRoleField, value) != true)) {
                    this.XMLRoleField = value;
                    this.RaisePropertyChanged("XMLRole");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSettings", Namespace="http://schemas.datacontract.org/2004/07/DCT.CtrackExternalAPI.Model")]
    [System.SerializableAttribute()]
    public partial class UserSettings : FTL.CTrack.Membership.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxxTimeZoneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OnlineTimeZoneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultBusinessGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LangugeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateTimeFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MetricField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserDriverNodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DefaultLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DefaultLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultZoomLevelField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FullUserName {
            get {
                return this.FullUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullUserNameField, value) != true)) {
                    this.FullUserNameField = value;
                    this.RaisePropertyChanged("FullUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public int MaxxTimeZoneID {
            get {
                return this.MaxxTimeZoneIDField;
            }
            set {
                if ((this.MaxxTimeZoneIDField.Equals(value) != true)) {
                    this.MaxxTimeZoneIDField = value;
                    this.RaisePropertyChanged("MaxxTimeZoneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public int OnlineTimeZoneID {
            get {
                return this.OnlineTimeZoneIDField;
            }
            set {
                if ((this.OnlineTimeZoneIDField.Equals(value) != true)) {
                    this.OnlineTimeZoneIDField = value;
                    this.RaisePropertyChanged("OnlineTimeZoneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public int DefaultBusinessGroupID {
            get {
                return this.DefaultBusinessGroupIDField;
            }
            set {
                if ((this.DefaultBusinessGroupIDField.Equals(value) != true)) {
                    this.DefaultBusinessGroupIDField = value;
                    this.RaisePropertyChanged("DefaultBusinessGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string LangugeCode {
            get {
                return this.LangugeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LangugeCodeField, value) != true)) {
                    this.LangugeCodeField = value;
                    this.RaisePropertyChanged("LangugeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string DateTimeFormat {
            get {
                return this.DateTimeFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.DateTimeFormatField, value) != true)) {
                    this.DateTimeFormatField = value;
                    this.RaisePropertyChanged("DateTimeFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string CurrencyFormat {
            get {
                return this.CurrencyFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyFormatField, value) != true)) {
                    this.CurrencyFormatField = value;
                    this.RaisePropertyChanged("CurrencyFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public bool Metric {
            get {
                return this.MetricField;
            }
            set {
                if ((this.MetricField.Equals(value) != true)) {
                    this.MetricField = value;
                    this.RaisePropertyChanged("Metric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public int UserDriverNodeID {
            get {
                return this.UserDriverNodeIDField;
            }
            set {
                if ((this.UserDriverNodeIDField.Equals(value) != true)) {
                    this.UserDriverNodeIDField = value;
                    this.RaisePropertyChanged("UserDriverNodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public double DefaultLatitude {
            get {
                return this.DefaultLatitudeField;
            }
            set {
                if ((this.DefaultLatitudeField.Equals(value) != true)) {
                    this.DefaultLatitudeField = value;
                    this.RaisePropertyChanged("DefaultLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public double DefaultLongitude {
            get {
                return this.DefaultLongitudeField;
            }
            set {
                if ((this.DefaultLongitudeField.Equals(value) != true)) {
                    this.DefaultLongitudeField = value;
                    this.RaisePropertyChanged("DefaultLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public int DefaultZoomLevel {
            get {
                return this.DefaultZoomLevelField;
            }
            set {
                if ((this.DefaultZoomLevelField.Equals(value) != true)) {
                    this.DefaultZoomLevelField = value;
                    this.RaisePropertyChanged("DefaultZoomLevel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CostCentre", Namespace="http://schemas.datacontract.org/2004/07/DCT.CtrackExternalAPI.Model")]
    [System.SerializableAttribute()]
    public partial class CostCentre : FTL.CTrack.Membership.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostCentreDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CostCentreIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostCentreNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostCentreTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string CostCentreDescription {
            get {
                return this.CostCentreDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CostCentreDescriptionField, value) != true)) {
                    this.CostCentreDescriptionField = value;
                    this.RaisePropertyChanged("CostCentreDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int CostCentreID {
            get {
                return this.CostCentreIDField;
            }
            set {
                if ((this.CostCentreIDField.Equals(value) != true)) {
                    this.CostCentreIDField = value;
                    this.RaisePropertyChanged("CostCentreID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string CostCentreName {
            get {
                return this.CostCentreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CostCentreNameField, value) != true)) {
                    this.CostCentreNameField = value;
                    this.RaisePropertyChanged("CostCentreName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string CostCentreType {
            get {
                return this.CostCentreTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CostCentreTypeField, value) != true)) {
                    this.CostCentreTypeField = value;
                    this.RaisePropertyChanged("CostCentreType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Validation", Namespace="http://schemas.datacontract.org/2004/07/DCT.CtrackExternalAPI.Model")]
    [System.SerializableAttribute()]
    public partial class Validation : FTL.CTrack.Membership.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string APIVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string SecurityToken {
            get {
                return this.SecurityTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTokenField, value) != true)) {
                    this.SecurityTokenField = value;
                    this.RaisePropertyChanged("SecurityToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int SessionLength {
            get {
                return this.SessionLengthField;
            }
            set {
                if ((this.SessionLengthField.Equals(value) != true)) {
                    this.SessionLengthField = value;
                    this.RaisePropertyChanged("SessionLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string APIVersion {
            get {
                return this.APIVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.APIVersionField, value) != true)) {
                    this.APIVersionField = value;
                    this.RaisePropertyChanged("APIVersion");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CTrack.Membership.IMembership")]
    public interface IMembership {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/AcquireSecurityToken", ReplyAction="http://tempuri.org/IMembership/AcquireSecurityTokenResponse")]
        FTL.CTrack.Membership.Validation AcquireSecurityToken(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/AcquireSecurityToken", ReplyAction="http://tempuri.org/IMembership/AcquireSecurityTokenResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.Validation> AcquireSecurityTokenAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetUserDetails", ReplyAction="http://tempuri.org/IMembership/GetUserDetailsResponse")]
        FTL.CTrack.Membership.User GetUserDetails(string token, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetUserDetails", ReplyAction="http://tempuri.org/IMembership/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.User> GetUserDetailsAsync(string token, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/ValidateToken", ReplyAction="http://tempuri.org/IMembership/ValidateTokenResponse")]
        FTL.CTrack.Membership.ValidToken ValidateToken(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/ValidateToken", ReplyAction="http://tempuri.org/IMembership/ValidateTokenResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.ValidToken> ValidateTokenAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetBusinessGroups", ReplyAction="http://tempuri.org/IMembership/GetBusinessGroupsResponse")]
        FTL.CTrack.Membership.BusinessGroup[] GetBusinessGroups(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetBusinessGroups", ReplyAction="http://tempuri.org/IMembership/GetBusinessGroupsResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.BusinessGroup[]> GetBusinessGroupsAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetProductsFeatures", ReplyAction="http://tempuri.org/IMembership/GetProductsFeaturesResponse")]
        FTL.CTrack.Membership.ProductFeatures[] GetProductsFeatures(string token, string ProductDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetProductsFeatures", ReplyAction="http://tempuri.org/IMembership/GetProductsFeaturesResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.ProductFeatures[]> GetProductsFeaturesAsync(string token, string ProductDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetFullUserSettings", ReplyAction="http://tempuri.org/IMembership/GetFullUserSettingsResponse")]
        FTL.CTrack.Membership.UserSettings GetFullUserSettings(string token, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetFullUserSettings", ReplyAction="http://tempuri.org/IMembership/GetFullUserSettingsResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.UserSettings> GetFullUserSettingsAsync(string token, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/ReleaseSecurityToken", ReplyAction="http://tempuri.org/IMembership/ReleaseSecurityTokenResponse")]
        void ReleaseSecurityToken(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/ReleaseSecurityToken", ReplyAction="http://tempuri.org/IMembership/ReleaseSecurityTokenResponse")]
        System.Threading.Tasks.Task ReleaseSecurityTokenAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetAllCostCenterDetailsbyUserID", ReplyAction="http://tempuri.org/IMembership/GetAllCostCenterDetailsbyUserIDResponse")]
        FTL.CTrack.Membership.CostCentre[] GetAllCostCenterDetailsbyUserID(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetAllCostCenterDetailsbyUserID", ReplyAction="http://tempuri.org/IMembership/GetAllCostCenterDetailsbyUserIDResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.CostCentre[]> GetAllCostCenterDetailsbyUserIDAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetAllCostCenterDetailsbyBusinessGroupId", ReplyAction="http://tempuri.org/IMembership/GetAllCostCenterDetailsbyBusinessGroupIdResponse")]
        FTL.CTrack.Membership.CostCentre[] GetAllCostCenterDetailsbyBusinessGroupId(string token, int businessGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembership/GetAllCostCenterDetailsbyBusinessGroupId", ReplyAction="http://tempuri.org/IMembership/GetAllCostCenterDetailsbyBusinessGroupIdResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.CostCentre[]> GetAllCostCenterDetailsbyBusinessGroupIdAsync(string token, int businessGroupId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMembershipChannel : FTL.CTrack.Membership.IMembership, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MembershipClient : System.ServiceModel.ClientBase<FTL.CTrack.Membership.IMembership>, FTL.CTrack.Membership.IMembership {
        
        public MembershipClient() {
        }
        
        public MembershipClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MembershipClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MembershipClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MembershipClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FTL.CTrack.Membership.Validation AcquireSecurityToken(string username, string password) {
            return base.Channel.AcquireSecurityToken(username, password);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.Validation> AcquireSecurityTokenAsync(string username, string password) {
            return base.Channel.AcquireSecurityTokenAsync(username, password);
        }
        
        public FTL.CTrack.Membership.User GetUserDetails(string token, string username) {
            return base.Channel.GetUserDetails(token, username);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.User> GetUserDetailsAsync(string token, string username) {
            return base.Channel.GetUserDetailsAsync(token, username);
        }
        
        public FTL.CTrack.Membership.ValidToken ValidateToken(string token) {
            return base.Channel.ValidateToken(token);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.ValidToken> ValidateTokenAsync(string token) {
            return base.Channel.ValidateTokenAsync(token);
        }
        
        public FTL.CTrack.Membership.BusinessGroup[] GetBusinessGroups(string token) {
            return base.Channel.GetBusinessGroups(token);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.BusinessGroup[]> GetBusinessGroupsAsync(string token) {
            return base.Channel.GetBusinessGroupsAsync(token);
        }
        
        public FTL.CTrack.Membership.ProductFeatures[] GetProductsFeatures(string token, string ProductDescription) {
            return base.Channel.GetProductsFeatures(token, ProductDescription);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.ProductFeatures[]> GetProductsFeaturesAsync(string token, string ProductDescription) {
            return base.Channel.GetProductsFeaturesAsync(token, ProductDescription);
        }
        
        public FTL.CTrack.Membership.UserSettings GetFullUserSettings(string token, string username) {
            return base.Channel.GetFullUserSettings(token, username);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.UserSettings> GetFullUserSettingsAsync(string token, string username) {
            return base.Channel.GetFullUserSettingsAsync(token, username);
        }
        
        public void ReleaseSecurityToken(string token) {
            base.Channel.ReleaseSecurityToken(token);
        }
        
        public System.Threading.Tasks.Task ReleaseSecurityTokenAsync(string token) {
            return base.Channel.ReleaseSecurityTokenAsync(token);
        }
        
        public FTL.CTrack.Membership.CostCentre[] GetAllCostCenterDetailsbyUserID(string token) {
            return base.Channel.GetAllCostCenterDetailsbyUserID(token);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.CostCentre[]> GetAllCostCenterDetailsbyUserIDAsync(string token) {
            return base.Channel.GetAllCostCenterDetailsbyUserIDAsync(token);
        }
        
        public FTL.CTrack.Membership.CostCentre[] GetAllCostCenterDetailsbyBusinessGroupId(string token, int businessGroupId) {
            return base.Channel.GetAllCostCenterDetailsbyBusinessGroupId(token, businessGroupId);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.CostCentre[]> GetAllCostCenterDetailsbyBusinessGroupIdAsync(string token, int businessGroupId) {
            return base.Channel.GetAllCostCenterDetailsbyBusinessGroupIdAsync(token, businessGroupId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CTrack.Membership.IMembershipRest")]
    public interface IMembershipRest {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/AcquireSecurityTokenRest", ReplyAction="http://tempuri.org/IMembershipRest/AcquireSecurityTokenRestResponse")]
        FTL.CTrack.Membership.Validation AcquireSecurityTokenRest(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/AcquireSecurityTokenRest", ReplyAction="http://tempuri.org/IMembershipRest/AcquireSecurityTokenRestResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.Validation> AcquireSecurityTokenRestAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetUserDetailsRest", ReplyAction="http://tempuri.org/IMembershipRest/GetUserDetailsRestResponse")]
        FTL.CTrack.Membership.User GetUserDetailsRest(string token, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetUserDetailsRest", ReplyAction="http://tempuri.org/IMembershipRest/GetUserDetailsRestResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.User> GetUserDetailsRestAsync(string token, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/ReleaseSecurityTokenRest", ReplyAction="http://tempuri.org/IMembershipRest/ReleaseSecurityTokenRestResponse")]
        void ReleaseSecurityTokenRest(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/ReleaseSecurityTokenRest", ReplyAction="http://tempuri.org/IMembershipRest/ReleaseSecurityTokenRestResponse")]
        System.Threading.Tasks.Task ReleaseSecurityTokenRestAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/ValidateTokenRest", ReplyAction="http://tempuri.org/IMembershipRest/ValidateTokenRestResponse")]
        FTL.CTrack.Membership.ValidToken ValidateTokenRest(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/ValidateTokenRest", ReplyAction="http://tempuri.org/IMembershipRest/ValidateTokenRestResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.ValidToken> ValidateTokenRestAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetProductsFeaturesRest", ReplyAction="http://tempuri.org/IMembershipRest/GetProductsFeaturesRestResponse")]
        FTL.CTrack.Membership.ProductFeatures[] GetProductsFeaturesRest(string token, string ProductDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetProductsFeaturesRest", ReplyAction="http://tempuri.org/IMembershipRest/GetProductsFeaturesRestResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.ProductFeatures[]> GetProductsFeaturesRestAsync(string token, string ProductDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetBusinessGroupsRest", ReplyAction="http://tempuri.org/IMembershipRest/GetBusinessGroupsRestResponse")]
        FTL.CTrack.Membership.BusinessGroup[] GetBusinessGroupsRest(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetBusinessGroupsRest", ReplyAction="http://tempuri.org/IMembershipRest/GetBusinessGroupsRestResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.BusinessGroup[]> GetBusinessGroupsRestAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetFullUserSettingsRest", ReplyAction="http://tempuri.org/IMembershipRest/GetFullUserSettingsRestResponse")]
        FTL.CTrack.Membership.UserSettings GetFullUserSettingsRest(string token, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetFullUserSettingsRest", ReplyAction="http://tempuri.org/IMembershipRest/GetFullUserSettingsRestResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.UserSettings> GetFullUserSettingsRestAsync(string token, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetAllCostCenterDetailsbyUserIDRest", ReplyAction="http://tempuri.org/IMembershipRest/GetAllCostCenterDetailsbyUserIDRestResponse")]
        FTL.CTrack.Membership.CostCentre[] GetAllCostCenterDetailsbyUserIDRest(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetAllCostCenterDetailsbyUserIDRest", ReplyAction="http://tempuri.org/IMembershipRest/GetAllCostCenterDetailsbyUserIDRestResponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.CostCentre[]> GetAllCostCenterDetailsbyUserIDRestAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetAllCostCenterDetailsbyBusinessGroupIdRest", ReplyAction="http://tempuri.org/IMembershipRest/GetAllCostCenterDetailsbyBusinessGroupIdRestRe" +
            "sponse")]
        FTL.CTrack.Membership.CostCentre[] GetAllCostCenterDetailsbyBusinessGroupIdRest(string token, string businessGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipRest/GetAllCostCenterDetailsbyBusinessGroupIdRest", ReplyAction="http://tempuri.org/IMembershipRest/GetAllCostCenterDetailsbyBusinessGroupIdRestRe" +
            "sponse")]
        System.Threading.Tasks.Task<FTL.CTrack.Membership.CostCentre[]> GetAllCostCenterDetailsbyBusinessGroupIdRestAsync(string token, string businessGroupId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMembershipRestChannel : FTL.CTrack.Membership.IMembershipRest, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MembershipRestClient : System.ServiceModel.ClientBase<FTL.CTrack.Membership.IMembershipRest>, FTL.CTrack.Membership.IMembershipRest {
        
        public MembershipRestClient() {
        }
        
        public MembershipRestClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MembershipRestClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MembershipRestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MembershipRestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FTL.CTrack.Membership.Validation AcquireSecurityTokenRest(string username, string password) {
            return base.Channel.AcquireSecurityTokenRest(username, password);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.Validation> AcquireSecurityTokenRestAsync(string username, string password) {
            return base.Channel.AcquireSecurityTokenRestAsync(username, password);
        }
        
        public FTL.CTrack.Membership.User GetUserDetailsRest(string token, string username) {
            return base.Channel.GetUserDetailsRest(token, username);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.User> GetUserDetailsRestAsync(string token, string username) {
            return base.Channel.GetUserDetailsRestAsync(token, username);
        }
        
        public void ReleaseSecurityTokenRest(string token) {
            base.Channel.ReleaseSecurityTokenRest(token);
        }
        
        public System.Threading.Tasks.Task ReleaseSecurityTokenRestAsync(string token) {
            return base.Channel.ReleaseSecurityTokenRestAsync(token);
        }
        
        public FTL.CTrack.Membership.ValidToken ValidateTokenRest(string token) {
            return base.Channel.ValidateTokenRest(token);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.ValidToken> ValidateTokenRestAsync(string token) {
            return base.Channel.ValidateTokenRestAsync(token);
        }
        
        public FTL.CTrack.Membership.ProductFeatures[] GetProductsFeaturesRest(string token, string ProductDescription) {
            return base.Channel.GetProductsFeaturesRest(token, ProductDescription);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.ProductFeatures[]> GetProductsFeaturesRestAsync(string token, string ProductDescription) {
            return base.Channel.GetProductsFeaturesRestAsync(token, ProductDescription);
        }
        
        public FTL.CTrack.Membership.BusinessGroup[] GetBusinessGroupsRest(string token) {
            return base.Channel.GetBusinessGroupsRest(token);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.BusinessGroup[]> GetBusinessGroupsRestAsync(string token) {
            return base.Channel.GetBusinessGroupsRestAsync(token);
        }
        
        public FTL.CTrack.Membership.UserSettings GetFullUserSettingsRest(string token, string username) {
            return base.Channel.GetFullUserSettingsRest(token, username);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.UserSettings> GetFullUserSettingsRestAsync(string token, string username) {
            return base.Channel.GetFullUserSettingsRestAsync(token, username);
        }
        
        public FTL.CTrack.Membership.CostCentre[] GetAllCostCenterDetailsbyUserIDRest(string token) {
            return base.Channel.GetAllCostCenterDetailsbyUserIDRest(token);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.CostCentre[]> GetAllCostCenterDetailsbyUserIDRestAsync(string token) {
            return base.Channel.GetAllCostCenterDetailsbyUserIDRestAsync(token);
        }
        
        public FTL.CTrack.Membership.CostCentre[] GetAllCostCenterDetailsbyBusinessGroupIdRest(string token, string businessGroupId) {
            return base.Channel.GetAllCostCenterDetailsbyBusinessGroupIdRest(token, businessGroupId);
        }
        
        public System.Threading.Tasks.Task<FTL.CTrack.Membership.CostCentre[]> GetAllCostCenterDetailsbyBusinessGroupIdRestAsync(string token, string businessGroupId) {
            return base.Channel.GetAllCostCenterDetailsbyBusinessGroupIdRestAsync(token, businessGroupId);
        }
    }
}
